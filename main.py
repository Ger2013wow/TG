import asyncio
import os
from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart
from aiogram.types import (
    Message,
    InlineKeyboardMarkup, InlineKeyboardButton,
    ChatJoinRequest,
)
from aiogram.exceptions import TelegramForbiddenError, TelegramBadRequest

BOT_TOKEN = os.getenv("BOT_TOKEN", "").strip()
GROUP_ID = int(os.getenv("GROUP_ID", "0"))
JOIN_REQUEST_LINK = os.getenv("JOIN_REQUEST_LINK", "").strip()

WELCOME_DM_TEXT = os.getenv("WELCOME_DM_TEXT", (
    "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n"
    "üéÅ –ë–æ–Ω—É—Å-–∫–æ–¥: WEPARI2025\n"
    "–£—Å–ª–æ–≤–∏—è: –≤–µ–π–¥–∂–µ—Ä x30. –ö–æ–¥ –æ–±—â–∏–π, –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–ª—è –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã.\n\n"
    "–ö–∞–∫ –ø—Ä–∏–º–µ–Ω–∏—Ç—å:\n"
    "1) –ó–∞–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç.\n"
    "2) –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏.\n"
    "3) –ë–æ–Ω—É—Å –Ω–∞—á–∏—Å–ª–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏."
))

if not BOT_TOKEN:
    raise SystemExit("Set BOT_TOKEN env var")
if not GROUP_ID:
    raise SystemExit("Set GROUP_ID env var (e.g. -1001234567890)")
if not JOIN_REQUEST_LINK:
    raise SystemExit("Set JOIN_REQUEST_LINK env var (https://t.me/+XXXX join-request link)")

bot = Bot(BOT_TOKEN, parse_mode="HTML")
dp = Dispatcher()

def kb_join() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîì –í—Å—Ç—É–ø–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É", url=JOIN_REQUEST_LINK)]
    ])

@dp.message(CommandStart())
async def on_start(m: Message):
    first = m.from_user.first_name or "–¥—Ä—É–≥"
    text = (
        f"–ü—Ä–∏–≤–µ—Ç, {first}! üéâ\n\n"
        "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî –≤—Å—Ç—É–ø–∞–π –≤ –Ω–∞—à—É –≥—Ä—É–ø–ø—É.\n"
        "–ù–∞–∂–º–∏ ¬´–í—Å—Ç—É–ø–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É¬ª –Ω–∏–∂–µ. –ó–∞—è–≤–∫—É –æ–¥–æ–±—Ä–∏–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏."
    )
    await m.answer(text, reply_markup=kb_join())

@dp.chat_join_request()
async def on_join_request(req: ChatJoinRequest):
    user = req.from_user
    user_id = user.id

    try:
        await bot.approve_chat_join_request(chat_id=req.chat.id, user_id=user_id)
    except TelegramBadRequest as e:
        print(f"[WARN] approve_chat_join_request: {e}")

    try:
        await bot.send_message(chat_id=user_id, text=WELCOME_DM_TEXT)
    except TelegramForbiddenError:
        try:
            mention = f"<a href='tg://user?id={user_id}'>{user.full_name}</a>"
            msg = (
                f"{mention}, –æ—Ç–∫—Ä–æ–π—Ç–µ —á–∞—Ç —Å –±–æ—Ç–æ–º @wepari_tr_bot –∏ –Ω–∞–∂–º–∏—Ç–µ /start, "
                f"—á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å-–∫–æ–¥ –≤ –ª–∏—á–∫—É."
            )
            await bot.send_message(chat_id=GROUP_ID, text=msg, disable_web_page_preview=True)
        except Exception:
            pass
    except Exception as e:
        print(f"[ERROR] send DM failed: {e}")

async def main():
    me = await bot.get_me()
    print(f"Started @{me.username} | GROUP_ID={GROUP_ID}")
    await dp.start_polling(bot, allowed_updates=["message", "chat_join_request"])

if __name__ == "__main__":
    asyncio.run(main())