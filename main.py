import asyncio
import os
from aiogram import Bot, Dispatcher
from aiogram.filters import CommandStart
from aiogram.types import (
    Message, InlineKeyboardMarkup, InlineKeyboardButton,
    ChatMemberUpdated
)
from aiogram.enums.chat_member_status import ChatMemberStatus
from aiogram.client.default import DefaultBotProperties
from aiogram.exceptions import TelegramForbiddenError

BOT_TOKEN = os.getenv("BOT_TOKEN", "").strip()
GROUP_ID = int(os.getenv("GROUP_ID", "0"))
JOIN_REQUEST_LINK = os.getenv("JOIN_REQUEST_LINK", "").strip()
WELCOME_DM_TEXT = os.getenv(
    "WELCOME_DM_TEXT",
    "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\nüéÅ –ë–æ–Ω—É—Å-–∫–æ–¥: WEPARI2025\n–£—Å–ª–æ–≤–∏—è: –≤–µ–π–¥–∂–µ—Ä x30..."
)

if not BOT_TOKEN or not GROUP_ID or not JOIN_REQUEST_LINK:
    raise SystemExit("Set BOT_TOKEN, GROUP_ID, JOIN_REQUEST_LINK env vars")

bot = Bot(BOT_TOKEN, default=DefaultBotProperties(parse_mode="HTML"))
dp = Dispatcher()

def kb_join() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîì –í—Å—Ç—É–ø–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É", url=JOIN_REQUEST_LINK)]
    ])

@dp.message(CommandStart())
async def on_start(m: Message):
    await m.answer(
        "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ ¬´–í—Å—Ç—É–ø–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É¬ª. –ü–æ—Å–ª–µ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –ø—Ä–∏—à–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–∏—á–∫—É.",
        reply_markup=kb_join()
    )

@dp.chat_member()
async def on_chat_member(update: ChatMemberUpdated):
    # –õ–æ–≤–∏–º —Ñ–∞–∫—Ç –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –Ω—É–∂–Ω—É—é –≥—Ä—É–ø–ø—É
    if update.chat.id != GROUP_ID:
        return
    if (
        update.new_chat_member.status == ChatMemberStatus.MEMBER and
        update.old_chat_member.status != ChatMemberStatus.MEMBER
    ):
        user = update.new_chat_member.user
        await try_dm_or_fallback(user.id, user.full_name)

async def try_dm_or_fallback(user_id: int, full_name: str):
    try:
        await bot.send_message(user_id, WELCOME_DM_TEXT)
    except TelegramForbiddenError:
        # –Æ–∑–µ—Ä –Ω–µ –Ω–∞–∂–∞–ª Start ‚Äî –æ—Ç–ø—Ä–∞–≤–∏–º –ø–æ–¥—Å–∫–∞–∑–∫—É –≤ –≥—Ä—É–ø–ø—É
        mention = f"<a href='tg://user?id={user_id}'>{full_name}</a>"
        msg = f"{mention}, –æ—Ç–∫—Ä–æ–π—Ç–µ —á–∞—Ç —Å –±–æ—Ç–æ–º @wepari_tr_bot –∏ –Ω–∞–∂–º–∏—Ç–µ /start, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å."
        try:
            await bot.send_message(GROUP_ID, msg, disable_web_page_preview=True)
        except Exception:
            pass

async def main():
    me = await bot.get_me()
    print(f"Started @{me.username} | GROUP_ID={GROUP_ID}")
    await dp.start_polling(bot, allowed_updates=["message", "chat_member"])

if __name__ == "__main__":
    asyncio.run(main())
